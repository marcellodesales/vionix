####
#### Author: Marcello DeSales (@mdesales)
####
# Builds and Pushes a Docker Image to Viasat's Artifactory Docker Registry
# https://www.freecodecamp.org/news/a-lightweight-tool-agnostic-ci-cd-flow-with-github-actions/
# Base Workflow: https://git.viasat.com/seceng-devsecops-platform/devsecops-client-runtime-blackduck/blob/master/.github/workflows/devsecops-python.yaml

name: create-github-tagged-release

on:
  # Manual workflow execution
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch
  # https://github.com/actions/runner/issues/1483#issuecomment-969295757
  # https://github.com/orgs/community/discussions/25595#discussioncomment-3248417
  workflow_call:
    inputs:
      seceng-devsecops-dind-runner-label:
        description: "Docker-in-docker (dind) runner to use base label"
        required: false
        type: string
        # Base image for the label is at https://git.viasat.com/seceng-devsecops-platform/devsecops-platform-runtime-github_actions_runner
        default: devsecops

      slack-channel-id:
        description: "The id of the slack channel to send messages to"
        required: false
        type: string

    # We need to declare the intent of secrets. The pipelines reusing this must declare them!
    # https://github.com/orgs/community/discussions/26749#discussioncomment-3253230
    secrets:
      SLACK_CHANNEL_AUTOMATION_ID:
        description: "The Slack channel ID"
        required: false

      SLACK_CHANNEL_AUTOMATION_TOKEN:
        description: "The token for the given Slack channel ID"
        required: false

      GITOPS_GITHUB_DEPLOY_PAT:
        description: "The token to push tagged releases to the executing github workflow"
        required: false

# Avoid multiple CI jobs to execute for multiple commits in a given branch
# section #6: Saving Computation Time by Stopping Obsolete Workflows
concurrency:
  group: github-tag-release-devsecops-${{ github.ref }}-1
  cancel-in-progress: true

jobs:

  code:
    name: 🔧 code
    runs-on: ${{ inputs.seceng-devsecops-dind-runner-label }}

    # Maybe to get twistlock action to run we need permission to read
    # https://github.com/actions/checkout/issues/254#issuecomment-1166945991
    permissions:
      contents: read  # <--- allows to read repo

    # https://github.community/t/sharing-a-variable-between-jobs/16967/14
    outputs:
      # "set-output" in each of the steps[name].outputs is defined is where these are defined for the job
      githubActionJobName: ${{steps.set_base_values.outputs.githubActionJobName}}
      githubActionJobUrl: ${{steps.set_base_values.outputs.githubActionJobUrl}}
      githubActionRunId: ${{steps.set_base_values.outputs.githubActionRunId}}
      githubOrg: ${{steps.set_base_values.outputs.githubOrg}}
      defaultDockerImageVersion: ${{steps.set_base_values.outputs.defaultDockerImageVersion}}
      defaultDockerImageBranchTag: ${{steps.set_base_values.outputs.defaultDockerImageBranchTag}}
      defaultDockerImageBranchShaTag: ${{steps.set_base_values.outputs.defaultDockerImageBranchShaTag}}
      defaultDockerImageBranchTagForVersion: ${{steps.set_base_values.outputs.defaultDockerImageBranchTagForVersion}}
      dockerContextPath: ${{steps.set_base_values.outputs.dockerContextPath}}
      jobStartTimestamp: ${{steps.set_base_values.outputs.jobStartTimestamp}}
      gitShortSha: ${{steps.set_base_values.outputs.gitShortSha}}
      committerName: ${{steps.set_base_values.outputs.committerName}}
      committerEmail: ${{steps.set_base_values.outputs.committerEmail}}
      buildDateTime: ${{steps.set_base_values.outputs.buildDateTime}}
      gitopsDeployEnv: ${{steps.set_base_values.outputs.gitopsDeployEnv}}
      gitopsDeployUrl: ${{steps.set_base_values.outputs.gitopsDeployUrl}}
      gitopsDeploySegment: ${{steps.set_base_values.outputs.gitopsDeploySegment}}
      gitopsDeployTargetRepo: ${{steps.set_base_values.outputs.gitopsDeployTargetRepo}}
      gitopsDeployTargetRepoBranch: ${{steps.set_base_values.outputs.gitopsDeployTargetRepoBranch}}
      gitopsDeployTargetProvider: ${{steps.set_base_values.outputs.gitopsDeployTargetProvider}}
      gitopsDeployTargetRegion: ${{steps.set_base_values.outputs.gitopsDeployTargetRegion}}
      gitopsDeployTargetType: ${{steps.set_base_values.outputs.gitopsDeployTargetType}}
      gitopsDeployVersion: ${{steps.set_base_values.outputs.gitopsDeployVersion}}
      nextReleaseTag: ${{steps.set_release_tag.outputs.nextReleaseTag}}
      previousReleaseTag: ${{steps.set_release_tag.outputs.previousReleaseTag}}

    steps:
      - name: Provided input to the app
        run: |
          echo "Inputs=${{ toJSON(inputs) }}"

      - name: Annotate Job with current information
        run: |
          # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-markdown-content
          echo "# 🔧 code Job Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

      - name: Annotate Job with current information
        run: |
          # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-markdown-content
          echo "## :recycle: Needs refactoring" >> $GITHUB_STEP_SUMMARY
          echo "* Installed latest git to self-hosted to be able to see the .git metadata dir " >> $GITHUB_STEP_SUMMARY
          echo "  * https://github.com/actions/checkout/issues/335#issuecomment-763159788 " >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

      - name: Fetch all history and have .git locally for inspection
        uses: viarise/checkout@v4.1.1
        with:
          fetch-depth: 0

      # Write directly to GITHUB_ENV so that all steps have access to the same values
      # https://docs.github.com/en/actions/learn-github-actions/environment-variables#passing-values-between-steps-and-jobs-in-a-workflow
      - name: Set default envs from for tags and names
        run: |
          env
          echo "DEFAULT_DOCKER_IMAGE_VERSION=${GITHUB_SHA}" >> $GITHUB_ENV
          # The repo name only without refs 
          # https://stackoverflow.com/questions/13570327/how-to-delete-a-substring-using-shell-script/46104342#46104342
          REMOVE="refs/heads/"
          BRANCH_TAG=${GITHUB_REF/$REMOVE/}

          REMOVE="refs/tags/"
          BRANCH_TAG=${GITHUB_REF/$REMOVE/}

          echo "BRANCH_TAG=${BRANCH_TAG}" >> $GITHUB_ENV
          # Remove the / from topic branches for versions, etc:
          BRANCH_TAG_FOR_VERSION=$(echo ${BRANCH_TAG} | sed -e 's/\//-/g')
          BRANCH_TAG_FOR_VERSION=$(echo ${BRANCH_TAG_FOR_VERSION} | sed -e 's/#/-/g')
          echo "BRANCH_TAG_FOR_VERSION=${BRANCH_TAG_FOR_VERSION}" >> $GITHUB_ENV
          # The branch and sha together makes it easier to find
          GIT_SHORT_SHA=${GITHUB_SHA:0:7}
          echo "GIT_SHORT_SHA=${GIT_SHORT_SHA}" >> $GITHUB_ENV
          echo "BRANCH_SHA_TAG=${GIT_SHORT_SHA}-${BRANCH_TAG_FOR_VERSION}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_APP_VERSION=${GIT_SHORT_SHA}-${BRANCH_TAG_FOR_VERSION}" >> $GITHUB_ENV
          # For twistcli
          echo "BUILD_JOB_NAME=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" >> $GITHUB_ENV
          echo "BUILD_JOB_URL=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" >> $GITHUB_ENV
          # https://stackoverflow.com/questions/60942067/get-current-date-and-time-in-github-workflows/60942437#60942437
          BUILD_DATE_TIME=$(date +'%Y-%m-%d %H:%m:%S %Z')
          echo "BUILD_DATE_TIME=${BUILD_DATE_TIME}" >> $GITHUB_ENV
          JOB_TIMESTAMP=$(date +%s)
          echo "JOB_TIMESTAMP=${JOB_TIMESTAMP}" >> $GITHUB_ENV
          # https://git-scm.com/docs/git-show
          COMMITTER_NAME=$(git --no-pager show -s --format="%an")
          echo "COMMITTER_NAME=${COMMITTER_NAME}" >> $GITHUB_ENV
          COMMITTER_EMAIL=$(git --no-pager show -s --format="%ae")
          echo "COMMITTER_EMAIL=${COMMITTER_EMAIL}" >> $GITHUB_ENV

          env

      - name: Setting values
        id: set_base_values
        run: |
          # The below outputs a JSON array of check tasks for each subproject
          #  variable https://www.cynkra.com/blog/2020-12-23-dynamic-gha/
          # https://github.community/t/sharing-a-variable-between-jobs/16967/14
          echo "githubActionJobName=$BUILD_JOB_NAME" >> $GITHUB_OUTPUT
          echo "githubActionJobUrl=$BUILD_JOB_URL" >> $GITHUB_OUTPUT
          echo "githubActionRunId=$GITHUB_RUN_ID" >> $GITHUB_OUTPUT
          echo "defaultDockerImageVersion=$DEFAULT_DOCKER_IMAGE_VERSION" >> $GITHUB_OUTPUT
          echo "defaultDockerImageBranchTag=$BRANCH_TAG" >> $GITHUB_OUTPUT
          echo "defaultDockerImageBranchTagForVersion=$BRANCH_TAG_FOR_VERSION" >> $GITHUB_OUTPUT
          echo "defaultDockerImageBranchShaTag=$BRANCH_SHA_TAG" >> $GITHUB_OUTPUT
          echo "gitShortSha=$GIT_SHORT_SHA" >> $GITHUB_OUTPUT
          echo "buildDateTime=$BUILD_DATE_TIME" >> $GITHUB_OUTPUT
          echo "jobStartTimestamp=$JOB_TIMESTAMP" >> $GITHUB_OUTPUT
          echo "committerName=$COMMITTER_NAME" >> $GITHUB_OUTPUT
          echo "committerEmail=$COMMITTER_EMAIL" >> $GITHUB_OUTPUT
          echo "githubOrg=$GITHUB_REPOSITORY_OWNER" >> $GITHUB_OUTPUT

          echo "gitopsDeployEnv=$GITOPS_TARGET_ENV" >> $GITHUB_OUTPUT
          echo "gitopsDeployUrl=$GITOPS_TARGET_URL" >> $GITHUB_OUTPUT
          echo "gitopsDeploySegment=$GITOPS_TARGET_SEGMENT" >> $GITHUB_OUTPUT
          echo "gitopsDeployTargetRepo=$GITOPS_TARGET_REPO" >> $GITHUB_OUTPUT
          echo "gitopsDeployTargetRepoBranch=$GITOPS_TARGET_REPO_BRANCH" >> $GITHUB_OUTPUT
          echo "gitopsDeployTargetProvider=$GITOPS_TARGET_PROVIDER" >> $GITHUB_OUTPUT
          echo "gitopsDeployTargetRegion=$GITOPS_TARGET_REGION" >> $GITHUB_OUTPUT
          echo "gitopsDeployTargetType=$GITOPS_TARGET_TYPE" >> $GITHUB_OUTPUT
          echo "gitopsDeployVersion=$NEXT_PUBLIC_APP_VERSION" >> $GITHUB_OUTPUT 

      - name: Fetch Latest Release information
        id: latest_release
        uses: octokit/request-action@v2.x
        env:
          GITHUB_TOKEN: ${{ secrets.GITOPS_GITHUB_DEPLOY_PAT }}
        # Since this action might fail with 404 when there's no releases, we just allow the workflow continue its execution
        continue-on-error: true
        with:
          route: GET /repos/${{ github.repository }}/releases/latest

      - name: Check if Latest Release Exists
        id: release_check
        run: |
          if [ "${{ steps.latest_release.outputs.status }}" == "404" ]; then
            echo "exists=false" >> $GITHUB_OUTPUT
          else
            echo "exists=true" >> $GITHUB_OUTPUT
          fi

      - name: Create initial Tag as v1.0.0-RC1
        if: steps.release_check.outputs.exists == 'false'
        run: |
          echo "RELEASE_TAG=v1.0.0-RC1" >> $GITHUB_ENV
          echo "PREVIOUS_TAG=v1.0.0-RC1" >> $GITHUB_ENV

      - name: Capture existing release tags
        id: existing_release_tags
        if: steps.release_check.outputs.exists == 'true'
        run: |
          echo "Response from the service" 

          PREVIOUS_TAG=${{ fromJSON(steps.latest_release.outputs.data).tag_name }}
          echo "PREVIOUS_TAG=${PREVIOUS_TAG}" >> $GITHUB_ENV

      - name: Increment Tag
        if: steps.release_check.outputs.exists == 'true'
        run: |
          previousRelease=${PREVIOUS_TAG}

          # Extract version number by removing RC and everything after
          version=${previousRelease%-RC*}

          # Extract RC part by removing version number and hyphen
          rcPart=RC${previousRelease#*-RC}

          if [[ $rcPart =~ ^RC([0-9]+)$ ]]; then
            current_number=${BASH_REMATCH[1]}
            echo "Current number: ${current_number}"

            incrementedTag="${version}-RC$((current_number+1))"
            echo "Incremented Release tag: ${incrementedTag}"

            echo "RELEASE_TAG=${incrementedTag}" >> $GITHUB_ENV
          fi

      - name: Save Release and Previous tags as Output
        id: set_release_tag
        run: |
          # https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/#examples
          echo "previousReleaseTag=$PREVIOUS_TAG" >> $GITHUB_OUTPUT 
          echo "nextReleaseTag=$RELEASE_TAG" >> $GITHUB_OUTPUT 

      - name: Annotate Job with notification status
        run: |
          # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-markdown-content
          echo "## :loudspeaker: notify" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "* 🔢 Previous Release=${PREVIOUS_TAG}" >> $GITHUB_STEP_SUMMARY
          echo "* 🔢 Next Release=${RELEASE_TAG}" >> $GITHUB_STEP_SUMMARY

  tag:
    name: 🔖 tag
    needs: [code]
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' || github.event.pull_request.base.ref == 'master'
    runs-on: ${{ inputs.seceng-devsecops-dind-runner-label }}
    # providing permissions https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idpermissions
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the changed files back to the repository.
      contents: write
      # To declare deployments updates
      deployments: write

    steps:
      - name: Provided input to the app
        run: |
          echo "code-outputs=${{ toJSON(needs.code.outputs) }}"

      - name: Generated release notes
        id: release_notes
        uses: octokit/request-action@v2.x
        # Since this action might fail with 404 when there's no releases, we just allow the workflow continue its execution
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITOPS_GITHUB_DEPLOY_PAT }}
        with:
          # https://docs.github.com/en/enterprise-server@3.8/rest/releases/releases#generate-release-notes-content-for-a-release
          route: POST /repos/${{ github.repository }}/releases/generate-notes
          # The way it works in the browser, just let previous to be discovered
          # releases/notes?commitish=v1.0.0-RC9&tag_name=v1.0.0-RC9&previous_tag_name="
          commitish: ${{ needs.code.outputs.nextReleaseTag }}
          tag_name: ${{ needs.code.outputs.nextReleaseTag }}
          previous_tag_name: ""

      - name: Release Notes Messages
        id: formated_release_notes
        # Escape the new lines since it's required by the HTTP POST API body, replacing ":" with "-" to avoid yaml formatting issues
        #          FORMATTED_PAYLOAD=$(echo "$FORMATTED_PAYLOAD" | sed 's/:/\-/g')
        run: |
          echo "Message: ${{ fromJson(steps.release_notes.outputs.data).body }}"
          FORMATTED_PAYLOAD=$(echo -e "${{ fromJson(steps.release_notes.outputs.data).body }}" | awk '{printf "%s\\n", $0}')
          FORMATTED_PAYLOAD="${FORMATTED_PAYLOAD}\n\n## 🔀 Generated by Viasat DevSecOps Platform\n* [Tag Workflow](https://git.viasat.com/${{ github.repository }}/actions/runs/${{github.run_id}})"
          echo "textPayload=$FORMATTED_PAYLOAD" >> $GITHUB_OUTPUT

      - name: Create Release tag
        id: create_release
        uses: octokit/request-action@v2.x
        env:
          GITHUB_TOKEN: ${{ secrets.GITOPS_GITHUB_DEPLOY_PAT }}
        with:
          route: POST /repos/${{ github.repository }}/releases
          data: '{"name": "${{ needs.code.outputs.nextReleaseTag }}", "tag_name": "${{ needs.code.outputs.nextReleaseTag }}", "body": "${{ steps.formated_release_notes.outputs.textPayload }}"}'

      # https://stackoverflow.com/questions/59175332/using-output-from-a-previous-job-in-a-new-one-in-a-github-action/70900405#70900405
      - name: Slack Notification of Starting Container DevSecOps of https://git.viasat.com/${{ github.repository }}@${{github.sha}}#${{needs.code.outputs.githubActionRunId}}
        id: slack # IMPORTANT: Reference this step ID value in future Slack steps.
        uses: seceng-devsecops-platform/wearerequired-slack-messaging-action@v2.0.2
        with:
          bot_token: ${{ secrets.SLACK_CHANNEL_AUTOMATION_TOKEN }}
          channel_id: ${{ secrets.SLACK_CHANNEL_AUTOMATION_ID }}
          payload: >-
            {
                "text": "🔢 Workflow Release Creation at \n <https://git.viasat.com/${{ github.repository }}/releases/tag/|${{ github.repository }}/releases/tag/${{needs.code.outputs.nextReleaseTag}}>",
                "attachments": [
                    {
                        "color": "#B6B6B6",
                        "fields": [
                            {
                              "title": "#️⃣ Revision",
                              "value": "<https://git.viasat.com/${{ github.repository }}/commit/${{needs.code.outputs.gitShortSha}}|${{needs.code.outputs.gitShortSha}}>",
                              "short": true
                            },
                            {
                              "title": "🌿 PR",
                              "value": "<https://git.viasat.com/${{ github.repository }}/tree/${{needs.code.outputs.defaultDockerImageBranchTag}}|${{needs.code.outputs.defaultDockerImageBranchTag}}>",
                              "short": true
                            },
                            {
                              "title": "👤 Author",
                              "value": "<${{ github.event.sender.html_url }}|${{needs.code.outputs.committerName}}, ${{needs.code.outputs.committerEmail}}>",
                              "short": true
                            },
                            {
                              "title": "🔀 Workflow",
                              "value": "<https://git.viasat.com/${{ github.repository }}/actions/runs/${{github.run_id}}|${{github.run_id}}>",
                              "short": true
                            },
                            {
                              "title": "🔖 Tag",
                              "value": "<https://git.viasat.com/${{ github.repository }}/releases/tag/${{needs.code.outputs.nextReleaseTag}}|${{needs.code.outputs.nextReleaseTag}}>",
                              "short": true
                            }
                        ],
                        "footer": "<${{needs.code.outputs.githubActionJobUrl}}>"
                    }
                ]
            }
