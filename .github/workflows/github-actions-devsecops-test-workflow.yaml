#######
####### Author: Marcello.DeSales@viasat.com
#######
####### Scans the github action workflows from a given github repository
name: github-actions-devsecops-test-workflow

# Avoid multiple CI jobs to execute for multiple commits in a given branch
# section #6: Saving Computation Time by Stopping Obsolete Workflows
concurrency:
  group: github-actions-devsecops-test-workflow-${{ github.ref }}-1
  cancel-in-progress: true

on:
  # Manual workflow execution
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch
  # https://github.com/actions/runner/issues/1483#issuecomment-969295757
  # https://github.com/orgs/community/discussions/25595#discussioncomment-3248417
  workflow_call:
    inputs:
      seceng-devsecops-dind-runner-label:
        description: "Docker-in-docker (dind) runner to use base label"
        required: false
        type: string
        # Base image for the label is at https://git.viasat.com/seceng-devsecops-platform/devsecops-platform-runtime-github_actions_runner
        default: devsecops

      dont-fail-on-errors:
          description: "If the PR should pass even if the linter failed"
          required: false
          type: boolean
          default: false

      private-repo-token:
          description: "For private repos, just use the deploy token to clone the repo"
          required: false
          type: string

jobs:
  lint:
    name: 🚨 lint
    runs-on: ${{ inputs.seceng-devsecops-dind-runner-label }}
    permissions:
      # Permissions required by the PR commmenter action
      # https://github.com/marocchino/sticky-pull-request-comment?tab=readme-ov-file#sticky-pull-request-comment
      pull-requests: write

    steps:
      - name: Checkout the current sources of repos without token
        if: ${{ inputs.private-repo-token == '' }}
        uses: actions/checkout@v4.2.2

      - name: Checkout the current sources with secret GITOPS_GITHUB_DEPLOY_PAT
        if: ${{ inputs.private-repo-token != '' }}
        uses: actions/checkout@v4.2.2
        with:
          token: ${{ secrets.GITOPS_GITHUB_DEPLOY_PAT }}

      - name: Generate md report Check workflow files under .github/workflows using linter
        shell: bash
        # The docker container fails with 1 when findings, so make sure it passes
        # The exception will come from the problem-matcher below
        # Disabling shellcheck as it causes too much noise
        # https://github.com/rhysd/actionlint/blob/main/rule_shellcheck.go
        # https://github.com/rhysd/actionlint/blob/main/docs/checks.md#check-shellcheck-integ
        run: |
          echo "Preparing the report linter in .md format"
          docker run -v $(pwd):$(pwd) -w $(pwd) dockerhub.docker.artifactory.viasat.com/rhysd/actionlint:1.6.26 -ignore 'SC2086:' -shellcheck= -format '{{range $err := .}}### Error at line {{$err.Line}}, col {{$err.Column}} of `{{$err.Filepath}}`\n\n{{$err.Message}}\n\n```\n{{$err.Snippet}}\n```\n\n{{end}}' > workflows-linter.md || true
          ls -la workflows-linter.md

      - name: Enrich the generated md report
        run: |
          ls -la workflows-linter.md
          echo "Processing the file to categorize alerts for summary and PR"
          # Check if the line contains the start of a new block
          current_block_name=""

          # Read the file line by line
          while IFS= read -r line; do

            if [[ $line == "### Error"* ]]; then

              # Get the block name from the file name
              block_name=$(echo "$line" | cut -d'`' -f2)

              # Only add the block if the current is different
              if [ "${current_block_name}" != "${block_name}" ]; then
                # Add the close block when it's not empty, as empty will be the beginning
                if [ "${current_block_name}" != "" ]; then
                  echo "</details>"
                fi

                # Update the reference
                current_block_name=$block_name

                echo "<details>"
                echo "<summary> :octocat: Action Lint Errors in '$block_name'</summary>"
                echo ""
              fi

              # Print the current line as a subblock of the current block
              sub_block_text=$(echo "$line" | awk -F"### " '{ print $2 }')
              echo "🚨 ${sub_block_text}"

              # Just continue because we are just processing the headers
              continue
            fi

            # Print the current line as a subblock of the current block
            echo "$line"

          done < workflows-linter.md > new-report.md
          
          if ! [ -s workflows-linter.md ]; then
            echo "No linting problems found!" >> new-report.md
          fi

          echo "# 🚨️ Github Actions Lint" >> header.md
          echo "> **Formatted by the Vionix DevSecOps Platform**" >> header.md
          echo "" >> header.md
          cat new-report.md >> header.md

          mv header.md workflows-linter.md
          ls -la workflows-linter.md
          
          cat workflows-linter.md | head -c 65536 > workflows-linter.md-max
          mv -v workflows-linter.md-max workflows-linter.md

      - name: Add Lint PR Comment
        uses: seceng-devsecops-platform/marocchino-sticky-pull-request-comment-action@v2.9.1
        if: ${{ always() && github.event_name == 'pull_request' }}
        with:
          header: github-action-lint
          recreate: true
          path: workflows-linter.md

      - name: Annotate Workflow Summary with lint info
        run: |
          cat workflows-linter.md >> $GITHUB_STEP_SUMMARY

      - name: Checkout Vionix Platform workflows
        uses: actions/checkout@v4.2.2
        with:
          repository: seceng-devsecops-platform/devsecops-platform-github-workflows
          ref: main
          path: ./platform-actions
          # https://github.com/stefanzweifel/git-auto-commit-action#push-to-protected-branches
          token: ${{ secrets.GITHUB_TOKEN }}

        # setting up the problem matcher https://github.com/facebookresearch/fairseq2/blob/main/.github/workflows/_lint_py.yaml
      - name: Install the problem matchers for github actions
        shell: bash
        env:
          MATCHER: actionlint
        run: |
          echo "Current list of problem matchers in the DevSecOps Platform"
          ls -laR ./platform-actions/problem-matchers
          
          echo "Verifying if the provided matcher ${MATCHER} exists at ./platform-actions/problem-matchers/${MATCHER}-problem-matcher.json"
          if [ -f ./platform-actions/problem-matchers/${MATCHER}-problem-matcher.json ]; then
            echo "Will use the problem matcher ./platform-actions/problem-matchers/${MATCHER}-problem-matcher.json"
            cat ./platform-actions/problem-matchers/${MATCHER}-problem-matcher.json | jq
            echo "::add-matcher::./platform-actions/problem-matchers/${MATCHER}-problem-matcher.json"
          fi

      # This requires the problem matcher to be installed
      #
      - name: Check workflow files under .github/workflows using github linter for problem matcher
        shell: bash
        continue-on-error: ${{ inputs.dont-fail-on-errors }}
        run: docker run -v $(pwd):$(pwd) -w $(pwd) dockerhub.docker.artifactory.viasat.com/rhysd/actionlint:1.6.26 -color -format '{{range $err := .}}::error file={{$err.Filepath}},line={{$err.Line}},col={{$err.Column}}::{{$err.Message}}%0A```%0A{{replace $err.Snippet "\\n" "%0A"}}%0A```\n{{end}}' -ignore 'SC2016:'
